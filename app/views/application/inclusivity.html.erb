<%= content_for :title do "Sustainable Software Manifesto" end %>
<%= content_for :page_description do "We—developers, designers, and entrepreneurs—shape the world through software. Prioritizing sustainability, inclusivity, and ethics is key to a just and resilient future." end %>
<%= content_for :page_image do asset_url("sustainable-manifesto-illustration.jpg") end %>

<div class="px-6 py-16 lg:px-8">
  <div class="mx-auto max-w-3xl text-base/7 text-gray-700 dark:text-gray-400">
    <h1 class="mt-2 text-pretty text-4xl font-semibold tracking-tight text-gray-900 dark:text-gray-300 sm:text-5xl">Inclusivity before Simplicity</h1>
    <p class="mt-6 text-xl/8">The principle of Inclusivity before Simplicity is part of the <a href="/" target="_blank" class="text-teal-600 underline hover:text-teal-800 hover:no-underline">Manifesto for Sustainable Software Development</a> created by software developers, designers and entrepreneurs to call for responsibility among our peers to prioritize sustainability — not only in terms of ecological impact but also in inclusivity, ethics, and the long-term resilience of the digital systems we create. By prioritizing Inclusivity over Simplicity when designing our software, we may contribute to a shift toward a better digital future where technology serves the needs of society, humanity, and the planet — rather than exploiting human psychology for the benefit of a few.</p>
    <div class="mt-10 max-w-2xl">
      <%= render "work_in_progress" %>
      <p class="mt-8">Simplicity in design has undeniable value—it makes systems easier to use, improves initial accessibility, and reduces friction for new users. However, prioritizing simplicity over inclusivity often results in systems that exclude users with unique needs or more advanced requirements. Inclusivity ensures that technology adapts to diverse user groups and remains flexible enough to evolve with future demands, creating more equitable, resilient platforms.</p>
      <p class="mt-8">Inclusivity in software design ensures that systems serve a wide range of users with diverse needs, abilities, and preferences. While simplicity is valuable for creating accessible and user-friendly systems, prioritizing simplicity at the expense of inclusivity often results in marginalizing individuals who do not fit the assumed user profile. Inclusivity goes beyond basic accessibility by addressing the needs of groups who might otherwise be excluded from meaningful participation due to technological, cultural, or socioeconomic barriers.</p>
      <p class="mt-8">Systems designed solely for simplicity can fail to accommodate individuals who require alternative means of interaction, such as those with disabilities, elderly users who may not be comfortable with modern technology, or individuals in resource-constrained environments without access to advanced devices. While accessibility features, such as screen readers or keyboard navigation, should be standard in all modern software, inclusivity demands a deeper examination of how systems can bridge gaps for marginalized communities. For instance, community software that assumes all users have access to smartphones could limit interaction for individuals who rely on simpler channels, like email or SMS. Designing systems that integrate these channels could open up participation to a wider audience, ensuring no one is left behind.</p>
      <p class="mt-8">Inclusivity is rooted in principles of equity and fairness. According to Hansen (2019), systems that cater to diverse needs strengthen resilience within communities, enabling all members to contribute meaningfully. This aligns with the World Wide Web Consortium (W3C) guidelines, which emphasize the importance of adaptable systems that allow users with varying levels of technical proficiency and physical ability to engage effectively. Universal Design principles further underscore the need for systems to support multiple methods of interaction, enabling users to engage with technology in ways that best suit their circumstances and preferences.</p>
      <p class="mt-8">To achieve inclusivity, designers must go beyond providing accessibility features and consider how to actively include marginalized groups. This involves creating systems that are not only easy to use but also flexible enough to meet the needs of diverse users. Examples include:</p>
      <ul role="list" class="mt-8 max-w-xl space-y-8 text-gray-600 dark:text-gray-400">
        <li class="flex gap-x-3">
          <svg class="mt-1 size-5 flex-none text-teal-600" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true" data-slot="icon">
            <path fill-rule="evenodd" d="M10 18a8 8 0 1 0 0-16 8 8 0 0 0 0 16Zm3.857-9.809a.75.75 0 0 0-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 1 0-1.06 1.061l2.5 2.5a.75.75 0 0 0 1.137-.089l4-5.5Z" clip-rule="evenodd" />
          </svg>
          <span>Offering alternative interfaces for users who may not have access to smartphones, such as email-based interactions or SMS notifications, ensuring individuals with limited technological skills or devices can still participate.</span>
        </li>
        <li class="flex gap-x-3">
          <svg class="mt-1 size-5 flex-none text-teal-600" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true" data-slot="icon">
            <path fill-rule="evenodd" d="M10 18a8 8 0 1 0 0-16 8 8 0 0 0 0 16Zm3.857-9.809a.75.75 0 0 0-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 1 0-1.06 1.061l2.5 2.5a.75.75 0 0 0 1.137-.089l4-5.5Z" clip-rule="evenodd" />
          </svg>
          <span>Building multilingual support into software to address language barriers and make platforms accessible to global audiences.</span>
        </li>
        <li class="flex gap-x-3">
          <svg class="mt-1 size-5 flex-none text-teal-600" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true" data-slot="icon">
            <path fill-rule="evenodd" d="M10 18a8 8 0 1 0 0-16 8 8 0 0 0 0 16Zm3.857-9.809a.75.75 0 0 0-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 1 0-1.06 1.061l2.5 2.5a.75.75 0 0 0 1.137-.089l4-5.5Z" clip-rule="evenodd" />
          </svg>
          <span>Designing modular systems that allow users to toggle between basic and advanced features, enabling both novice and experienced users to interact with the system effectively.</span>
        </li>
        <li class="flex gap-x-3">
          <svg class="mt-1 size-5 flex-none text-teal-600" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true" data-slot="icon">
            <path fill-rule="evenodd" d="M10 18a8 8 0 1 0 0-16 8 8 0 0 0 0 16Zm3.857-9.809a.75.75 0 0 0-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 1 0-1.06 1.061l2.5 2.5a.75.75 0 0 0 1.137-.089l4-5.5Z" clip-rule="evenodd" />
          </svg>
          <span>Providing simplified interfaces or workflows for elderly users who may struggle with modern technology but still want to engage in digital communities.</span>
        </li>
      </ul>
      <p class="mt-8">Failure to prioritize inclusivity can exacerbate inequalities. Marginalized groups, such as those with disabilities or limited access to advanced technology, may be excluded from opportunities to connect, collaborate, or access essential services. This exclusion can lead to further social and economic disparities, as technology becomes increasingly central to daily life and participation in society. Moreover, systems that fail to address diverse needs risk alienating entire user segments, reducing their effectiveness and long-term viability.</p>
      <p class="mt-8">Inclusivity also has broader societal implications. When technology fails to cater to diverse user groups, it often reinforces existing power imbalances, favoring those who already have access and technical expertise. By contrast, systems that actively include marginalized individuals foster greater equity, enabling all members of society to benefit from technological advancements. This approach not only aligns with ethical principles but also contributes to the long-term success and sustainability of platforms by expanding their reach and relevance.</p>
      <p class="mt-8">To implement inclusivity effectively, designers should engage with a wide range of users during the development process. This includes conducting user testing with individuals from different cultural, socioeconomic, and technological backgrounds to identify and address potential barriers. Designers should also prioritize flexibility in their systems, ensuring they can adapt to changing user needs and emerging technologies over time. By prioritizing inclusivity, designers can create systems that are not only accessible but also empowering, enabling all users to engage meaningfully and equitably in the digital world.</p>
    </div>
    <div class="mt-10 flex items-center gap-x-6">
      <a href="https://zensocial.online/circles/empowering-digital-communities" class="rounded-md bg-teal-600 px-3.5 py-2.5 text-sm font-semibold text-white dark:text-gray-200 shadow-sm hover:bg-teal-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-teal-600">Join the Conversation</a>
      <a href="/empowerment" class="text-sm/6 font-semibold text-gray-900 dark:text-gray-200">Next: Empowerment <span aria-hidden="true">→</span></a>
    </div>
  </div>
</div>
